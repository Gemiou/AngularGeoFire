(function(){"use strict";var a;angular.module("angularGeoFire",[]).factory("$geofire",["$q","$timeout","$rootScope","$log",function(b,c,d,e){return function(f){e.info("Constructing $geofire");var g=new a(b,c,d,f);return g.construct()}}]),a=function(a,b,c,d){if(this._q=a,this._rootScope=c,this._timeout=b,"string"==typeof d)throw new Error("Please provide a Firebase reference instead of a URL");this._geoRef=d,this._geoFire=new geoFire(this._geoRef),this._onPointsNearLocCallbacks=[],this._onPointsNearId=[]},a.prototype={construct:function(){var a=this,b={};b.$set=function(b,c){var d=a._q.defer();return a._timeout(function(){a._geoFire.set(b,c).then(function(){d.resolve(null)}).catch(function(a){d.reject(a)})}),d.promise},b.$remove=function(b){var c=a._q.defer();return a._timeout(function(){a._geoFire.remove(b).then(function(){c.resolve(null)}).catch(function(a){c.reject(a)})}),c.promise},b.$get=function(b){var c=a._q.defer();return a._timeout(function(){a._geoFire.get(b).then(function(a){c.resolve(a)}).catch(function(a){c.reject(a)})}),c.promise},b.$query=function(b){var c=a._geoFire.query(b);return{getCenter:function(){return c.getCenter()},getRadius:function(){return c.getRadius()},updateQueryCriteria:function(a){c.updateQueryCriteria(a)},getResults:function(){var b=a._q.defer();return c.getResults().then(function(a){b.resolve(a)}).catch(function(a){b.reject(a)}),b.promise},on:function(b,d){return c.on(b,function(b,c){a._rootScope.$broadcast(d,b,c)})},cancel:function(){c.cancel()}}};var c=function(a){return a*Math.PI/180};return b.$dist=function(a,b){var d,e,f=a[0],g=a[1],h=b[0],i=b[1],j=6371,k=c(h-f),l=c(i-g);return d=Math.sin(k/2)*Math.sin(k/2)+Math.cos(c(f))*Math.cos(c(h))*Math.sin(l/2)*Math.sin(l/2),e=2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d)),j*e},a._object=b,a._object}}}).call(this);